########################################################################################################################
# Default environment variables for Docker Compose.
#
# Compose supports declaring default environment variables in this file if it is in the folder where the docker-compose
# command is executed (current working directory).
#
# These syntax rules apply to this file:
#   - Compose expects each line in an `env` file to be in `VAR=VAL` format.
#   - Lines beginning with `#` are processed as comments and ignored.
#   - Blank lines are ignored.
#
# The environment variables you define here are used for variable substitution in your Compose file, and can also be
# used to define CLI variables. They are _not_ automatically injected into the containers.
########################################################################################################################

# The Docker API only supports requests from clients which report a specific version. If you receive a client and server
# don't have same version error using docker-compose, you can workaround this error by setting this environment
# variable.
#
# Set the version value to match the server version.
#COMPOSE_API_VERSION

# Enable path conversion from Windows-style to Unix-style in volume definitions.
#COMPOSE_CONVERT_WINDOWS_PATHS=0

# Use the Docker CLI when executing a build.
COMPOSE_DOCKER_CLI_BUILD=1

# Specify the path to a Compose file.
#
# If not provided, Compose looks for a file named docker-compose.yml in the current directory and then each parent
# directory in succession until a file by that name is found.
#
#
#COMPOSE_FILE="docker-compose.yml:docker-compose.override.yml"

# If set, volume declarations using the short syntax are parsed assuming the host path is a Windows path, even if
# Compose is running on a UNIX-based system.
#
# Supported values: true or 1 to enable, false or 0 to disable.
#COMPOSE_FORCE_WINDOWS_HOST=0

# Configures the time (in seconds) a request to the Docker daemon is allowed to hang before Compose considers it failed.
#
# Defaults to 60 seconds.
#COMPOSE_HTTP_TIMEOUT=60

# If set, Compose doesn’t try to detect orphaned containers for the project.
#
# Supported values: true or 1 to enable, false or 0 to disable.
#COMPOSE_IGNORE_ORPHANS=0

# If set, Compose doesn’t attempt to use the Docker CLI for interactive run and exec operations.
#
# This option is not available on Windows where the CLI is required for the aforementioned operations.
#
# Supported: true or 1 to enable, false or 0 to disable.
#COMPOSE_INTERACTIVE_NO_CLI=0

# Sets a limit for the number of operations Compose can execute in parallel.
#
# The default value is 64, and may not be set lower than 2.
#COMPOSE_PARALLEL_LIMIT=64

# If set, the value of the COMPOSE_FILE environment variable is separated using this character as path separator.
#COMPOSE_PATH_SEPARATOR=":"

# Specify one or multiple active profiles to enable.
#
# Calling docker-compose up with COMPOSE_PROFILES=frontend will start the services with the profile frontend and
# services without specified profiles.
#
# You can specify a list of profiles separated with a comma:
# COMPOSE_PROFILES=frontend,debug will enable the profiles frontend and debug.
#COMPOSE_PROFILES=

# Sets the project name.
#
# This value is prepended along with the service name to the container on start up. For example, if your project name is
# `myapp` and it includes two services `db` and `web`, then Compose starts containers named `myapp_db_1` and
# `myapp_web_1` respectively.
#
# Setting this is optional. If you do not set this, the `COMPOSE_PROJECT_NAME` defaults to the `basename` of the project
# directory. See also the -p command-line option.
COMPOSE_PROJECT_NAME=sonarr

# Configure which TLS version is used for TLS communication with the docker daemon.
#
# Defaults to TLSv1. Supported values are: TLSv1, TLSv1_1, TLSv1_2.
COMPOSE_TLS_VERSION=TLSv1_2

# Configures the path to the `ca.pem`, `cert.pem`, and `key.pem` files used for TLS verification.
#
# Defaults to `~/.docker`.
#DOCKER_CERT_PATH=~/.docker

# Sets the URL of the docker daemon. As with the Docker client, defaults to unix:///var/run/docker.sock.
#DOCKER_HOST=bumblebee.dmp.zone

# When set to anything other than an empty string, enables TLS communication with the docker daemon.
#DOCKER_TLS_VERIFY=
